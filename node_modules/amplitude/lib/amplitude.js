'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

var _q = require('q');

var _q2 = _interopRequireDefault(_q);

var _superagent = require('superagent');

var _superagent2 = _interopRequireDefault(_superagent);

var Amplitude = (function () {
  function Amplitude(token) {
    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

    _classCallCheck(this, Amplitude);

    _checkForToken(token);

    this.token = token;
    this.session_user_id = options.user_id;
    this.session_device_id = options.device_id;
  }

  _createClass(Amplitude, [{
    key: 'track',
    value: function track(data) {
      var _this = this;

      data.user_id = data.user_id || this.session_user_id;
      data.device_id = data.device_id || this.session_device_id;
      return _q2['default'].Promise(function (resolve, reject) {
        _postToApi(_this.token, data, resolve, reject);
      });
    }
  }]);

  return Amplitude;
})();

function _checkForToken(token) {
  if (!token) throw 'No token provided';
}

function _postToApi(token, data, resolve, reject) {
  _superagent2['default'].post('https://api.amplitude.com/httpapi').query({
    api_key: token,
    event: JSON.stringify(data)
  }).set('Accept', 'application/json').end(function (err, res) {
    if (err) {
      var name = data.user_id || data.device_id;
      return reject(err);
    }
    resolve(res.body);
  });
}

exports['default'] = Amplitude;
module.exports = exports['default'];